!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CONNECT_TIMEOUT	drvS7plc.c	55;"	d	file:
CONV64	devS7plc.c	57;"	d	file:
CONV64	devS7plc.c	60;"	d	file:
HOST_OPT	Makefile	/^HOST_OPT = NO$/;"	m
LIBRARY	Makefile	/^LIBRARY = s7plc$/;"	m
M_drvLib	drvS7plc.h	66;"	d
RECONNECT_DELAY	drvS7plc.c	56;"	d	file:
S7MEM_TIME	devS7plc.c	64;"	d	file:
S7memPrivate_t	devS7plc.c	/^} S7memPrivate_t;$/;"	t	typeref:struct:__anon1	file:
STATIC	drvS7plc.h	17;"	d
STATIC	drvS7plc.h	19;"	d
S_drv_OK	drvS7plc.h	69;"	d
S_drv_alreadyQd	drvS7plc.h	75;"	d
S_drv_badParam	drvS7plc.h	70;"	d
S_drv_cbackChg	drvS7plc.h	74;"	d
S_drv_invSigMode	drvS7plc.h	73;"	d
S_drv_noConn	drvS7plc.h	76;"	d
S_drv_noDevice	drvS7plc.h	72;"	d
S_drv_noMemory	drvS7plc.h	71;"	d
TOP	Makefile	/^TOP=..$/;"	m
__attribute__	drvS7plc.h	13;"	d
__extension__	devS7plc.c	51;"	d	file:
ai	s7plc.html	/^<a name="ai"><\/a>$/;"	a
ao	s7plc.html	/^<a name="ao"><\/a>$/;"	a
bi	s7plc.html	/^<a name="bi"><\/a>$/;"	a
bigEndianIoc	drvS7plc.c	/^static short bigEndianIoc;$/;"	v	file:
bit	devS7plc.c	/^    unsigned short bit;       \/* Bit number (0-15) for bi\/bo *\/$/;"	m	struct:__anon1	file:
bo	s7plc.html	/^<a name="bo"><\/a>$/;"	a
calcout	s7plc.html	/^<a name="calcout"><\/a>$/;"	a
config	s7plc.html	/^<a name="config"><\/a>$/;"	a
connStatus	drvS7plc.c	/^    int connStatus;$/;"	m	struct:s7plcStation	file:
cvsid	drvS7plc.c	/^static char cvsid[] __attribute__((unused)) =$/;"	v	file:
cvsid_devS7plc	devS7plc.c	/^static char cvsid_devS7plc[] =$/;"	v	file:
device	s7plc.html	/^<a name="device"><\/a>$/;"	a
devsup	devS7plc.c	/^struct devsup {$/;"	s	file:
dlen	devS7plc.c	/^    unsigned short dlen;      \/* Data length (in bytes) *\/$/;"	m	struct:__anon1	file:
driver	s7plc.html	/^<a name="driver"><\/a>$/;"	a
drvError	drvS7plc.h	67;"	d
drvS7plc_h	drvS7plc.h	8;"	d
dtype	devS7plc.c	/^    unsigned short dtype;     \/* Data type *\/$/;"	m	struct:__anon1	file:
epicsUInt64	devS7plc.c	56;"	d	file:
epicsUInt64	devS7plc.c	59;"	d	file:
get_ioint_info	devS7plc.c	/^    DEVSUPFUN get_ioint_info;$/;"	m	struct:devsup	file:
hwHigh	devS7plc.c	/^    epicsInt32 hwHigh;        \/* Hardware High limit *\/$/;"	m	struct:__anon1	file:
hwLow	devS7plc.c	/^    epicsInt32 hwLow;         \/* Hardware Low limit *\/$/;"	m	struct:__anon1	file:
inBuffer	drvS7plc.c	/^    char* inBuffer;$/;"	m	struct:s7plcStation	file:
inScanPvt	drvS7plc.c	/^    IOSCANPVT inScanPvt;$/;"	m	struct:s7plcStation	file:
inSize	drvS7plc.c	/^    int inSize;$/;"	m	struct:s7plcStation	file:
in_addr_t	drvS7plc.c	24;"	d	file:
init	devS7plc.c	/^    DEVSUPFUN init;$/;"	m	struct:devsup	file:
init	drvS7plc.c	/^    long (*init)();$/;"	m	struct:__anon2	file:
init_record	devS7plc.c	/^    DEVSUPFUN init_record;$/;"	m	struct:devsup	file:
intro	s7plc.html	/^<a name="intro"><\/a>$/;"	a
io	devS7plc.c	/^    DEVSUPFUN io;$/;"	m	struct:devsup	file:
io	drvS7plc.c	/^    epicsMutexId io;$/;"	m	struct:s7plcStation	file:
isnan	devS7plc.c	47;"	d	file:
longin	s7plc.html	/^<a name="longin"><\/a>$/;"	a
longout	s7plc.html	/^<a name="longout"><\/a>$/;"	a
mbbi	s7plc.html	/^<a name="mbbi"><\/a>$/;"	a
mbbiDirect	s7plc.html	/^<a name="mbbiDirect"><\/a>$/;"	a
mbbo	s7plc.html	/^<a name="mbbo"><\/a>$/;"	a
mbboDirect	s7plc.html	/^<a name="mbboDirect"><\/a>$/;"	a
mutex	drvS7plc.c	/^    epicsMutexId mutex;$/;"	m	struct:s7plcStation	file:
name	drvS7plc.c	/^    char* name;$/;"	m	struct:s7plcStation	file:
next	drvS7plc.c	/^    struct s7plcStation* next;$/;"	m	struct:s7plcStation	typeref:struct:s7plcStation::s7plcStation	file:
number	devS7plc.c	/^    long      number;$/;"	m	struct:devsup	file:
number	drvS7plc.c	/^    long number;$/;"	m	struct:__anon2	file:
offs	devS7plc.c	/^    unsigned short offs;      \/* Offset (in bytes) within memory block *\/$/;"	m	struct:__anon1	file:
outBuffer	drvS7plc.c	/^    char* outBuffer;$/;"	m	struct:s7plcStation	file:
outScanPvt	drvS7plc.c	/^    IOSCANPVT outScanPvt;$/;"	m	struct:s7plcStation	file:
outSize	drvS7plc.c	/^    int outSize;$/;"	m	struct:s7plcStation	file:
outTrigger	drvS7plc.c	/^    epicsEventId outTrigger;$/;"	m	struct:s7plcStation	file:
outputChanged	drvS7plc.c	/^    int outputChanged;$/;"	m	struct:s7plcStation	file:
recvThread	drvS7plc.c	/^    epicsThreadId recvThread;$/;"	m	struct:s7plcStation	file:
recvTimeout	drvS7plc.c	/^    float recvTimeout;$/;"	m	struct:s7plcStation	file:
report	devS7plc.c	/^    DEVSUPFUN report;$/;"	m	struct:devsup	file:
report	drvS7plc.c	/^    long (*report)();$/;"	m	struct:__anon2	file:
s7plc	drvS7plc.c	/^} s7plc = {$/;"	v	typeref:struct:__anon2
s7plcBi	devS7plc.c	/^struct devsup s7plcBi =$/;"	v	typeref:struct:devsup
s7plcBo	devS7plc.c	/^struct devsup s7plcBo =$/;"	v	typeref:struct:devsup
s7plcCloseConnection	drvS7plc.c	/^STATIC void s7plcCloseConnection(s7plcStation* station)$/;"	f
s7plcConfigure	drvS7plc.c	/^int s7plcConfigure(char *name, char* IPaddr, int port, int inSize, int outSize, int bigEndian, int recvTimeout, int sendIntervall)$/;"	f
s7plcConfigureArg0	drvS7plc.c	/^static const iocshArg s7plcConfigureArg0 = { "name", iocshArgString };$/;"	v	file:
s7plcConfigureArg1	drvS7plc.c	/^static const iocshArg s7plcConfigureArg1 = { "IPaddr", iocshArgString };$/;"	v	file:
s7plcConfigureArg2	drvS7plc.c	/^static const iocshArg s7plcConfigureArg2 = { "IPport", iocshArgInt };$/;"	v	file:
s7plcConfigureArg3	drvS7plc.c	/^static const iocshArg s7plcConfigureArg3 = { "inSize", iocshArgInt };$/;"	v	file:
s7plcConfigureArg4	drvS7plc.c	/^static const iocshArg s7plcConfigureArg4 = { "outSize", iocshArgInt };$/;"	v	file:
s7plcConfigureArg5	drvS7plc.c	/^static const iocshArg s7plcConfigureArg5 = { "bigEndian", iocshArgInt };$/;"	v	file:
s7plcConfigureArg6	drvS7plc.c	/^static const iocshArg s7plcConfigureArg6 = { "recvTimeout", iocshArgInt };$/;"	v	file:
s7plcConfigureArg7	drvS7plc.c	/^static const iocshArg s7plcConfigureArg7 = { "sendIntervall", iocshArgInt };$/;"	v	file:
s7plcConfigureArgs	drvS7plc.c	/^static const iocshArg * const s7plcConfigureArgs[] = {$/;"	v	file:
s7plcConfigureDef	drvS7plc.c	/^static const iocshFuncDef s7plcConfigureDef = { "s7plcConfigure", 8, s7plcConfigureArgs };$/;"	v	file:
s7plcConfigureFunc	drvS7plc.c	/^static void s7plcConfigureFunc (const iocshArgBuf *args)$/;"	f	file:
s7plcDebug	drvS7plc.c	/^int s7plcDebug = 0;$/;"	v
s7plcDebugLog	drvS7plc.c	/^void s7plcDebugLog(int level, const char *fmt, ...)$/;"	f
s7plcEstablishConnection	drvS7plc.c	/^STATIC int s7plcEstablishConnection(s7plcStation* station)$/;"	f
s7plcGetInIntInfo	devS7plc.c	/^STATIC long s7plcGetInIntInfo(int cmd, dbCommon *record, IOSCANPVT *ppvt)$/;"	f
s7plcGetInScanPvt	drvS7plc.c	/^IOSCANPVT s7plcGetInScanPvt(s7plcStation *station)$/;"	f
s7plcGetOutIntInfo	devS7plc.c	/^STATIC long s7plcGetOutIntInfo(int cmd, dbCommon *record, IOSCANPVT *ppvt)$/;"	f
s7plcGetOutScanPvt	drvS7plc.c	/^IOSCANPVT s7plcGetOutScanPvt(s7plcStation *station)$/;"	f
s7plcInit	drvS7plc.c	/^STATIC long s7plcInit()$/;"	f
s7plcInitRecordBi	devS7plc.c	/^STATIC long s7plcInitRecordBi(biRecord *record)$/;"	f
s7plcInitRecordBo	devS7plc.c	/^STATIC long s7plcInitRecordBo(boRecord *record)$/;"	f
s7plcInitRecordStat	devS7plc.c	/^STATIC long s7plcInitRecordStat(biRecord *record)$/;"	f
s7plcIoParse	devS7plc.c	/^STATIC int s7plcIoParse(char* recordName, char *par, S7memPrivate_t *priv)$/;"	f
s7plcIoReport	drvS7plc.c	/^STATIC long s7plcIoReport(int level)$/;"	f
s7plcMain	drvS7plc.c	/^void s7plcMain ()$/;"	f
s7plcOpen	drvS7plc.c	/^s7plcStation *s7plcOpen(char *name)$/;"	f
s7plcRead	drvS7plc.h	61;"	d
s7plcReadArray	drvS7plc.c	/^int s7plcReadArray($/;"	f
s7plcReadBi	devS7plc.c	/^STATIC long s7plcReadBi(biRecord *record)$/;"	f
s7plcReadStat	devS7plc.c	/^STATIC long s7plcReadStat(biRecord *record)$/;"	f
s7plcReceiveThread	drvS7plc.c	/^STATIC void s7plcReceiveThread (s7plcStation* station)$/;"	f
s7plcRegister	drvS7plc.c	/^epicsExportRegistrar(s7plcRegister);$/;"	v
s7plcRegister	drvS7plc.c	/^static void s7plcRegister ()$/;"	f	file:
s7plcReport	devS7plc.c	/^STATIC long s7plcReport()$/;"	f
s7plcSendThread	drvS7plc.c	/^STATIC void s7plcSendThread (s7plcStation* station)$/;"	f
s7plcSignal	drvS7plc.c	/^STATIC void s7plcSignal(void* event)$/;"	f
s7plcStat	devS7plc.c	/^struct devsup s7plcStat =$/;"	v	typeref:struct:devsup
s7plcStation	drvS7plc.c	/^struct s7plcStation {$/;"	s	file:
s7plcStation	drvS7plc.h	/^typedef struct s7plcStation s7plcStation;$/;"	t	typeref:struct:s7plcStation
s7plcStationList	drvS7plc.c	/^s7plcStation* s7plcStationList = NULL;$/;"	v
s7plcWaitForInput	drvS7plc.c	/^STATIC int s7plcWaitForInput(s7plcStation* station, double timeout)$/;"	f
s7plcWrite	drvS7plc.h	58;"	d
s7plcWriteArray	drvS7plc.h	52;"	d
s7plcWriteBo	devS7plc.c	/^STATIC long s7plcWriteBo(boRecord *record)$/;"	f
s7plcWriteMasked	drvS7plc.h	55;"	d
s7plcWriteMaskedArray	drvS7plc.c	/^int s7plcWriteMaskedArray($/;"	f
sendIntervall	drvS7plc.c	/^    float sendIntervall;$/;"	m	struct:s7plcStation	file:
sendThread	drvS7plc.c	/^    epicsThreadId sendThread;$/;"	m	struct:s7plcStation	file:
serverIP	drvS7plc.c	/^    char serverIP[20];$/;"	m	struct:s7plcStation	file:
serverPort	drvS7plc.c	/^    int serverPort;$/;"	m	struct:s7plcStation	file:
socket	drvS7plc.c	/^    volatile int socket;$/;"	m	struct:s7plcStation	file:
stat	s7plc.html	/^<a name="stat"><\/a>$/;"	a
station	devS7plc.c	/^    s7plcStation *station;    \/* Card id *\/$/;"	m	struct:__anon1	file:
stringin	s7plc.html	/^<a name="stringin"><\/a>$/;"	a
stringout	s7plc.html	/^<a name="stringout"><\/a>$/;"	a
swapBytes	drvS7plc.c	/^    int swapBytes;$/;"	m	struct:s7plcStation	file:
theory	s7plc.html	/^<a name="theory"><\/a>$/;"	a
timer	drvS7plc.c	/^    epicsTimerId timer;$/;"	m	struct:s7plcStation	file:
timerqueue	drvS7plc.c	/^static epicsTimerQueueId timerqueue = NULL;$/;"	v	file:
type	s7plc.html	/^<a name="type"><\/a>$/;"	a
waveform	s7plc.html	/^<a name="waveform"><\/a>$/;"	a
